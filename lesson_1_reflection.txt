How did viewing a diff between two versions of a file help you see the bug that was introduced?

-- That way we can easily see which line(s) were changed in the newer version that could be the source of the bug.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

-- It makes checking out the same program in different stages of the development easier, which saves time in bug fix later on, and in adding new featue base on a earlier version of the code, for instances.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

-- Because git is specialized in managing larger programming projects that might depend on multiple pieces of code working together. Having multiple changes saved to one commit is in line with the principle of "one logical change per commit," which makes the commit history more concise and easier to understand.

How can you use the commands git log and git diff to view the history of files?

-- git log shows the entire history of the commits in a repo; git diff compares two commits for differences.

How might using version control make you more confident to make changes that could break something?

-- I can always trace back to the last version(s) of my working code should my current code breaks.

Now that you have your workspace set up, what do you want to try using Git for?

-- Start tracking the edit history of my code projects.

